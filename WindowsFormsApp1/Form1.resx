<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABz
        cXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNzcXNz
        cXNzcXNzcXNzcXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtbWOtbVqlaVqlaVqlaVqlZVqlZVqlZVKc
        ZVKcYVKcYVKcYVKcYVKcYVKcYVKcYVKUXVKUXVKUXVKUXVKUXVKUXUqMWUpzcXMAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACtdWP/vr3/vr3/vr3/ur3/ur3/ur3/ur3/ur3/trX/trX/trX/trX/trX/srX/srX/
        srX/srX/srX/rq3/rq3/rq2UXVJzcXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1eWv/vr3/vr3/vr3/
        vr3/vr3/vr3/ur3/ur3/ur3/ur3/ur3/trX/trX/trX/trX/trX/srX/srX/srX/srX/srWUXVJzcXMA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1eWv/w8b/w8b/w8b/vr3/vr3/vr3/vr3/vr3/vr3/ur3/ur3/
        ur3/ur3/ur3/trX/trX/trX/trX/trX/srX/srWUXVJzcXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1
        eWv3vr3nsrXepqXWnpzOmpzOmpzOmpzOmpzOmpzOlpTOlpTOlpTOlpTOlpTWmpzenpznpqX3srX/trX/
        trX/trWcYVJzcXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcbWO9kpSceXuEYWNrVVJrUVJjTUpjTUpj
        TUpjSUpjSUpjSUpjSUpjTUprTUprUVJ7XVqccXO9iozenpz3rq3/trWcYVJzcXMAAAAAAAAAAAAAAAAA
        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
        AAP+AAAH/gAAD/4AAB/+AAA//gAAfw==
</value>
  </data>
</root>